function [fitresult, gof] = linearFit(xx,yy,varargin)
%
%  Create a linear fit.
%
%
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 28-Aug-2014 07:44:23

%% defualts
showFlag=false;
xname='$X$';
yname='$Y$';

i=1;
while i<=length(varargin)
    switch varargin{i}
        case {'show','plot'}
            showFlag=true;
        case {'noshow','noplot'}
            showFlag=false;
            
        case {'label','names','name','labels','labs'}
            i=i+1;
            xname=varargin{i};
            i=i+1;
            yname=varargin{i};
        case 'xname'
            i=i+1;
            xname=varargin{i};
        case 'yname'
            i=i+1;
            yname=varargin{i};
        otherwise
            error('linearFit: Illegal argument %s',varargin{i})
    end
    i=i+1;
end
%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( xx, yy );

% Set up fittype and options.
ft = fittype( 'poly1' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf];
opts.Upper = [Inf Inf];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
if showFlag
    figure( 'Name', 'Linear Fit' );
    h = plot( fitresult, xData, yData );
    legendTag=sprintf('%s vs. %s',xname,yname);
    hl=legend( h, legendTag, 'fit ', 'Location', 'NorthEast' );
    set(hl,'Interpreter','latex','Fontsize',12);
    
    % Label axes
    xlabelmine( xname );
    ylabelmine( yname );
    grid on
end


