%snap=99;
global simDisplayName
global illUnits
global DEFAULT_MATFILE_DIR
illustris.utils.set_illUnits(snap);

if readFlag
    
    fofs=illustris.groupcat.loadHalos(bp,snap);
    subs=illustris.groupcat.loadSubhalos(bp,snap);
    
end

massThresh=10^9; % threshold for *stellar* mass

subsInfo=illustris.infrastructure.build_sub_fof_connection(subs,fofs);

gMask=illustris.utils.generateMask('subs',subs','fofs',fofs,'mass',massThresh,'snap',snap,'centrals');

if snap==99
    spbMask = mk_splashback_mask('time',5,'both',0.1);
    
    galMask=gMask & ~spbMask;
else
    galMask=gMask;
end

sMassAllGals= double(subs.SubhaloMassInRadType(illustris.partTypeNum('stars')+1,:).*illUnits.massUnit); % stellar mass within 2*rhalf
gMmassAllGals= double(subs.SubhaloMassInRadType(illustris.partTypeNum('gas')+1,:).*illUnits.massUnit); % stellar mass within 2*rhalf

galMass=sMassAllGals(galMask);
fgs=gMmassAllGals(galMask)./sMassAllGals(galMask);

mfg=fgs>0;
xdata=log10(galMass(mfg));
ydata=log10(fgs(mfg));
% filt=fspecial('disk',6);
% pCont=plot_population_contour(xdata,ydata,'smooth',filt,'noplot');

be=9:0.25:11.5;
med = mk_meanMedian_bin(xdata,ydata,'bins',be);
inds=discretize(xdata,be);

hsgBinNum=[25,50,100,150,200];

for k=1:length(hsgBinNum)
    
    hf=figure('color','w','position',[83 433 1710 883]);
    
    for i=1:length(med.yMean)
        
        msk=inds==i;
        figure
        hs=histogram(ydata(msk),hsgBinNum(k));
        
        xx=hs.BinEdges(1:end-1)+0.5.*hs.BinWidth;
        yy=hs.Values;
        close(gcf)
        
        figure(hf)
        subplot(2,5,i)
        ax=gca;
        [fitresult, gof]=createFitTest(xx,yy);
        ax.Legend.Visible='off';
        xlim([-4 1])
        if i>5
            xlabelmine( '$\log\,f_\mathrm{gs}$');
        else
            ax.XLabel.Visible='off';
            
        end
        if i==1 || i==6
            ylabelmine( '$N$');
        else
            ax.YLabel.Visible='off';
            
        end
        titlemine([ num2str(be(i)) '-' num2str(be(i+1)) ', ' num2str(sum(yy))]);
        
        ft(k).mu1(i)=fitresult.b1;
        ft(k).sig1(i)=fitresult.c1./sqrt(2);
        ft(k).a1(i)=fitresult.a1;
        
        ft(k).mu2(i)=fitresult.b2;
        ft(k).sig2(i)=fitresult.c2./sqrt(2);
        ft(k).a2(i)=fitresult.a2;
        
        ft(k).rsqa(i)=gof.adjrsquare;
        
        ft(k).nums(i)=sum(yy);
    end
    ft(k).medianSt=med;
    ft(k).binEdges=be;
    ft(k).histBinNum=hsgBinNum(k);
    fname1=['fgs_stellarMass_gaussianFit_byBin_histBin' num2str(hsgBinNum(k)) '_snp_' num2str(snap) '_' simDisplayName];
    
    printout_fig(gcf,fname1,'v');
end
fname=['fgs_stellarMass_gaussianFit_byBin_snp_' num2str(snap) '_' simDisplayName];

save([DEFAULT_MATFILE_DIR '/' fname],'ft','-v7.3')




%
%
% figure
% contour(pCont.xx,pCont.yy,pCont.popContour,'ShowText','off','LineColor',[0 0 0],...
%                 'LevelList',20:20:100,'Fill','off','linestyle','-');
%   hold on
%  plot(med.xMedian,med.yMedian,'-r','linewidth',1.6)
%  plot(med.xMedian,med.yQuarts(2,:),'--r','linewidth',1.2)
%  plot(med.xMedian,med.yQuarts(3,:),'--r','linewidth',1.2)
%
%  grid
%  set(gca,'fontsize',14);
%  xlabelmine('log stellar mass');
%  ylabelmine('log gas-to-stellar mass ratio');
%  titlemine(simDisplayName);
%
% printout_fig(gcf,['fgs_stellarMass_' simDisplayName],'v')
%
% save





function [fitresult, gof] = createFitTest(xx, yy )
%CREATEFIT(XX,YY)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : xx
%      Y Output: yy
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 22-Dec-2019 22:21:03

[xData, yData] = prepareCurveData( xx, yy );

% Set up fittype and options.
ft = fittype( 'gauss2' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf 0 -Inf -Inf 0];
opts.StartPoint = [118 -0.6365 0.371803710458399 60 -3.0935 0.353466898651741];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
%figure( 'Name', 'untitled fit 1' );
plot( fitresult, xData, yData );
%clolegend( h, 'yy vs. xx', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes

grid on


end

